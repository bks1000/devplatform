activiti之流程变量值Business_key
http://blog.csdn.net/lovemenghaibin/article/details/50608300
    我们在做工作流的时候一定是需要将我们的业务和工作流来关联起来的，
而Activiti给我们提供了一个便利就是Business_key,而这个字段就是专门用来存储我们的业务关键字。
    例如我们有一个请假的业务，而我的请假信息都已经编写到数据库的表（tb_leaveBill）中了，
但是我怎么样把我的请假信息关联到activiti的数据库表中，对了，就是用给定的Activiti的Business_key,
而这里有一个小技巧，例如我的javaBean叫做LeaveBill,而我的请假信息的ID为1，
那么我就可以让他写成leaveBill.1，技巧就是业务Bean.业务ID，这样我们就能Business_key的设置了.


Activiti表单(Form key)
Form key的应用主要是获取任务节点需要展示的页面
当我们要打开任务表单的时候可以重定向到任务表单，重定向的action如：　　
formKey + "?id=" +objId + "&taskId=" +taskId;//objId为业务对象Id  taskId为任务Id   这样就可以在任务表单获取到想要的信息

根据任务id得到Form key
TaskFormData formData = formService.getTaskFormData(taskId);;
String formKey = formData.getFormKey();


流程相关变量(在act_hi_procinst表中)：
流程实例ID:proc_inst_id
业务表ID：Business_key
流程定义ID:proc_def_id



activiti数据库表结构剖析
http://blog.csdn.net/rosten/article/details/35220867
逻辑结构设计

Activiti使用到的表都是ACT_开头的。
ACT_RE_*:
’RE’表示repository(存储)，RepositoryService接口所操作的表。带此前缀的表包含的是静态信息，如，流程定义，流程的资源（图片，规则等）。
ACT_RU_*:
‘RU’表示runtime，运行时表-RuntimeService。这是运行时的表存储着流程变量，用户任务，变量，职责（job）等运行时的数据。Activiti只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。
ACT_ID_*:
’ID’表示identity (组织机构)，IdentityService接口所操作的表。用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。
ACT_HI_*:
’HI’表示history，历史数据表，HistoryService。就是这些表包含着流程执行的历史相关数据，如结束的流程实例，变量，任务，等等
ACT_GE_*:
全局通用数据及设置(general)，各种情况都使用的数据。


设计工作流后发布，中文乱码解决方案
http://www.jianshu.com/p/8f8b4de761ab