#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
${symbol_pound}         log4j配置相关说明  
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
  
${symbol_pound}%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL   
${symbol_pound}%r 输出自应用启动到输出该log信息耗费的毫秒数   
${symbol_pound}%c 输出所属的类目，通常就是所在类的全名   
${symbol_pound}%t 输出产生该日志事件的线程名  
${symbol_pound}%m 输出代码中指定的信息   
${symbol_pound}%n 输出一个回车换行符，Windows平台为“${symbol_escape}r${symbol_escape}n”，Unix平台为“${symbol_escape}n”   
${symbol_pound}%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921   
${symbol_pound}%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)   
  
${symbol_pound}log4j提供4种布局:   
${symbol_pound}org.apache.log4j.HTMLLayout（以HTML表格形式布局）  
${symbol_pound}org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
${symbol_pound}org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
${symbol_pound}org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息  
  
${symbol_pound}log4j中有五级logger 输出级别:  
${symbol_pound}FATAL 0   
${symbol_pound}ERROR 3   
${symbol_pound}WARN 4   
${symbol_pound}INFO 6   
${symbol_pound}DEBUG 7  
  
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
${symbol_pound}          log4j相关配置  
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
  
${symbol_pound}日志输出级别  
log4j.rootLogger=INFO,stdout,other  
  
${symbol_pound}设置stdout的日志输出控制台  
log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
${symbol_pound}输出日志到控制台的方式，默认为System.out  
log4j.appender.stdout.Target = System.out  
${symbol_pound}设置使用灵活布局  
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
${symbol_pound}灵活定义输出格式  
log4j.appender.stdout.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %m %n    
  
${symbol_pound}设置other的日志输出控制台  
log4j.appender.other=org.apache.log4j.RollingFileAppender  
${symbol_pound}设置other的输出日志  
log4j.appender.other.File=${symbol_dollar}{webapp.root}/WEB-INF/logs/log.log  
${symbol_pound}设置other的日志最大限制  
log4j.appender.other.MaxFileSize=1024KB  
${symbol_pound}最多只保存20个备份文件  
log4j.appender.other.MaxBackupIndex=1000  
${symbol_pound}输出INFO级别以上的日志  
og4j.appender.other.Threshold=INFO   
${symbol_pound}设置使用灵活布局  
log4j.appender.other.layout=org.apache.log4j.PatternLayout  
${symbol_pound}灵活定义输出格式  
log4j.appender.other.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %t %m %n    
  
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
${symbol_pound}       hibernate相关配置  
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}  
  
${symbol_pound}输出hibernate调试过程中的错误日志  
log4j.logger.org.hibernate=debug  
${symbol_pound}输出HQL查询调试日志  
log4j.logger.org.hibernate.hql.ast.AST=debug 
${symbol_pound}下面的两条配置非常重要，设置为trace后，将可以看到打印出sql中 ？ 占位符的实际内容 
${symbol_pound}输出SQL语句调试日志  
log4j.logger.org.hibernate.SQL=trace
${symbol_pound}输出 JDBC参数查询的日志  
log4j.logger.org.hibernate.type=trace
${symbol_pound}输出缓存日志   
log4j.logger.org.hibernate.cache=debug  
${symbol_pound}输出事务日志  
log4j.logger.org.hibernate.transaction=debug  
${symbol_pound}输出获取JDBC资源日志  
log4j.logger.org.hibernate.jdbc=debug
log4j.logger.org.hibernate.tool.hbm2ddl=debug   
log4j.logger.org.hibernate.hql=debug
log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace  
log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE  